{"ast":null,"code":"var _jsxFileName = \"/Users/kristinwu/Desktop/GoogleCloud-MLB-Hackathon/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({\n    x: 50,\n    y: 50\n  });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const toggleChatbot = () => setIsOpen(!isOpen);\n  const handleMouseDown = e => {\n    setDragging(true);\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y\n    });\n  };\n  const handleMouseMove = e => {\n    if (dragging) {\n      setPosition({\n        x: e.clientX - offset.x,\n        y: e.clientY - offset.y\n      });\n    }\n  };\n  const handleMouseUp = () => setDragging(false);\n  const handleSendMessage = () => {\n    if (input.trim()) {\n      setMessages([...messages, {\n        user: true,\n        text: input\n      }]);\n      setInput(\"\");\n      // Add bot response logic here\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          user: false,\n          text: \"I'm here to help!\"\n        }]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-icon\",\n    style: {\n      left: position.x,\n      top: position.y\n    },\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon\",\n      onClick: toggleChatbot,\n      children: \"\\uD83E\\uDD16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: \"MLB Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-body\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: msg.user ? \"chat-user\" : \"chat-bot\",\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Type your message here...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"etMMvfPxOwKtUDvQ227O3AtvF8U=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","position","setPosition","x","y","dragging","setDragging","offset","setOffset","messages","setMessages","input","setInput","toggleChatbot","handleMouseDown","e","clientX","clientY","handleMouseMove","handleMouseUp","handleSendMessage","trim","user","text","setTimeout","prev","className","style","left","top","onMouseDown","onMouseMove","onMouseUp","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/kristinwu/Desktop/GoogleCloud-MLB-Hackathon/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Chatbot.css\";\n\nconst Chatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({ x: 50, y: 50 });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const toggleChatbot = () => setIsOpen(!isOpen);\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y,\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      setPosition({\n        x: e.clientX - offset.x,\n        y: e.clientY - offset.y,\n      });\n    }\n  };\n\n  const handleMouseUp = () => setDragging(false);\n\n  const handleSendMessage = () => {\n    if (input.trim()) {\n      setMessages([...messages, { user: true, text: input }]);\n      setInput(\"\");\n      // Add bot response logic here\n      setTimeout(() => {\n        setMessages((prev) => [\n          ...prev,\n          { user: false, text: \"I'm here to help!\" },\n        ]);\n      }, 1000);\n    }\n  };\n\n  return (\n    <div\n      className=\"chatbot-icon\"\n      style={{ left: position.x, top: position.y }}\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n    >\n      <div className=\"icon\" onClick={toggleChatbot}>\n        ðŸ¤–\n      </div>\n      {isOpen && (\n        <div className=\"chatbot-window\">\n          <div className=\"chatbot-header\">MLB Chatbot</div>\n          <div className=\"chatbot-body\">\n            {messages.map((msg, index) => (\n              <p\n                key={index}\n                className={msg.user ? \"chat-user\" : \"chat-bot\"}\n              >\n                {msg.text}\n              </p>\n            ))}\n          </div>\n          <textarea\n            placeholder=\"Type your message here...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n          <button onClick={handleSendMessage}>Send</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}