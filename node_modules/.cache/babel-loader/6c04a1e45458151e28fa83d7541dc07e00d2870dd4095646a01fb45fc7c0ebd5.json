{"ast":null,"code":"var _jsxFileName = \"/Users/kristinwu/Desktop/GoogleCloud-MLB-Hackathon/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot({\n  onClose\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! How can I help you today?\",\n    isBot: true\n  }]);\n  const [inputText, setInputText] = useState('');\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputText.trim()) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      text: inputText,\n      isBot: false\n    }]);\n    setInputText('');\n\n    // Simulate bot response\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        text: \"Thanks for your message. Our team will get back to you soon.\",\n        isBot: true\n      }]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat with Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isBot ? 'bot' : 'user'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"GecrTIG6FeJJUcGNgWVTbkLTlaA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Chatbot","onClose","_s","messages","setMessages","text","isBot","inputText","setInputText","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","prev","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/kristinwu/Desktop/GoogleCloud-MLB-Hackathon/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './Chatbot.css';\n\nfunction Chatbot({ onClose }) {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! How can I help you today?\", isBot: true }\n  ]);\n  const [inputText, setInputText] = useState('');\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputText.trim()) return;\n\n    // Add user message\n    setMessages(prev => [...prev, { text: inputText, isBot: false }]);\n    setInputText('');\n\n    // Simulate bot response\n    setTimeout(() => {\n      setMessages(prev => [...prev, { \n        text: \"Thanks for your message. Our team will get back to you soon.\", \n        isBot: true \n      }]);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-header\">\n        <h3>Chat with Us</h3>\n        <button className=\"close-button\" onClick={onClose}>Ã—</button>\n      </div>\n\n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div \n            key={index} \n            className={`message ${message.isBot ? 'bot' : 'user'}`}\n          >\n            {message.text}\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"input-container\">\n        <input\n          type=\"text\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n          placeholder=\"Type your message...\"\n          className=\"message-input\"\n        />\n        <button type=\"submit\" className=\"send-button\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}